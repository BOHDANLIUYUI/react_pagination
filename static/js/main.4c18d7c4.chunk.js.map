{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","itemsPerPage","currentPage","onPageChange","pageCount","Math","ceil","isFirstPage","isLastPage","length","className","cn","href","onClick","map","pageNumber","active","disabled","items","App","useState","setCurrentPage","setItemsPerPage","firstItem","lastItem","visbleItems","slice","id","onChange","event","Number","target","value","changeItemsCount","htmlFor","page","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCGIG,EAAa,SAAC,GAKb,IAJZC,EAIW,EAJXA,MACAC,EAGW,EAHXA,aACAC,EAEW,EAFXA,YACAC,EACW,EADXA,aAEMC,EAAYX,EAAW,EAAIY,KAAKC,KAAKN,EAAQC,IAC7CM,EAAcL,IAAgBE,EAAU,GACxCI,EAAaN,IAAgBE,EAAUK,OAc7C,OACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YAAa,CACzB,qBAAsBJ,IAF1B,SAKE,mBACE,UAAQ,WACRG,UAAU,YACVE,KAAK,QACL,gBAAeL,EACfM,QAAS,kBAjBPN,EAEJL,EADAC,EAAaD,EAAc,IAW3B,oBAUDE,EAAUU,KAAI,SAAAC,GAAU,OACvB,oBAEEL,UAAWC,IAAG,YAAa,CACzBK,OAAQd,IAAgBa,IAH5B,SAME,mBACE,UAAQ,WACRL,UAAU,YACVE,KAAI,WAAMG,GACVF,QAAS,kBAAMV,EAAaY,IAJ9B,SAMGA,KAXEA,MAgBT,oBACEL,UAAWC,IAAG,YAAa,CACzBM,SAAUT,IAFd,SAKE,mBACE,UAAQ,WACRE,UAAU,YACVE,KAAK,QACL,gBAAeJ,EACfK,QAAS,kBAxDPL,EAEJN,EADAC,EAAaD,EAAc,IAkD3B,wBCnEFgB,EAAQzB,EAAW,EAAG,IACzBqB,KAAI,SAAAjB,GAAC,qBAAYA,MAIPsB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOlB,EAAP,KAAoBmB,EAApB,KACA,EAAwCD,mBAAS,GAAjD,mBAAOnB,EAAP,KAAqBqB,EAArB,KAOMC,EAAYtB,EAAeC,EAAcD,EAAe,EAExDuB,EAAWtB,EAAcD,EAbb,MAedC,EAAcD,EAEZwB,EAAcP,EAAMQ,MAAMH,EAAY,EAAGC,GAE/C,OACE,sBAAKd,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCqB,EADjC,cACgDC,EADhD,eAvBc,GAuBd,OAIA,sBAAKd,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,SAAU,SAACC,GAAD,OA3BK,SAACA,GACxBP,EAAgBQ,OAAOD,EAAME,OAAOC,QACpCX,EAAe,GAyBcY,CAAiBJ,IACtCG,MAAO/B,EALT,UAOE,wBAAQ+B,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOE,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAjDY,GAkDZC,aAAcA,EACdC,YAAaA,EACbC,aAAc,SAACgC,GAAD,OAAwBd,EAAec,MAGvD,6BACGV,EAAYX,KAAI,SAAAsB,GAAI,OACnB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YChEjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4c18d7c4.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number;\n  itemsPerPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination = ({\n  total,\n  itemsPerPage,\n  currentPage,\n  onPageChange,\n}: Props) => {\n  const pageCount = getNumbers(1, (Math.ceil(total / itemsPerPage)));\n  const isFirstPage = currentPage === pageCount[0];\n  const isLastPage = currentPage === pageCount.length;\n\n  const goToNextPage = () => {\n    return !isLastPage\n      ? onPageChange(currentPage + 1)\n      : currentPage;\n  };\n\n  const backToPreviousPage = () => {\n    return !isFirstPage\n      ? onPageChange(currentPage - 1)\n      : currentPage;\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', {\n          'page-item disabled': isFirstPage,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={() => backToPreviousPage()}\n        >\n          «\n        </a>\n      </li>\n      {pageCount.map(pageNumber => (\n        <li\n          key={pageNumber}\n          className={cn('page-item', {\n            active: currentPage === pageNumber,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageNumber}`}\n            onClick={() => onPageChange(pageNumber)}\n          >\n            {pageNumber}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn('page-item', {\n          disabled: isLastPage,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={() => goToNextPage()}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst TOTAL_ITEMS = 42;\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n\n  const changeItemsCount = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(Number(event.target.value));\n    setCurrentPage(1);\n  };\n\n  const firstItem = itemsPerPage * currentPage - itemsPerPage + 1;\n\n  const lastItem = currentPage * itemsPerPage > TOTAL_ITEMS\n    ? TOTAL_ITEMS\n    : currentPage * itemsPerPage;\n\n  const visbleItems = items.slice(firstItem - 1, lastItem);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${TOTAL_ITEMS})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(event) => changeItemsCount(event)}\n            value={itemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={TOTAL_ITEMS}\n        itemsPerPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={(page: number): void => setCurrentPage(page)}\n      />\n\n      <ul>\n        {visbleItems.map(item => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}